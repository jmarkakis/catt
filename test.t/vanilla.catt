set explicit_substitutions = t

coh whiskr (x : *) (y : *) (f : x -> y) (f' : x -> y) (a : f -> f')
                   (z : *) (g : y -> z) : comp x y f z g -> comp x y f' z g
coh whiskl (x : *) (y : *) (f : x -> y)
                   (z : *) (g : y -> z) (g' : y -> z) (a : g -> g') :  comp x y f z g -> comp x y f z g'
coh horiz (x : *) (y : *) (f : x -> y) (f' : x -> y) (a : f -> f')
                  (z : *) (g : y -> z) (g' : y -> z) (b : g -> g') :
		  comp x y f z g -> comp x y f' z g'

let sq (x : *) (f : x -> x) = comp x x f x f

let cbd (x : *) (f : x -> x) : x -> x = comp x x f x (comp x x f x f)

coh simpl (x : *) : sq x (id x) -> id x

check (x : *) (f : x -> x) = comp x x (sq x f) x (cbd x f)
