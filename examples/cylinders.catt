let src (x : *) (y : *) (f : x -> y) (z : *) (g : y -> z) (w : *) (h : z -> w) = comp f (comp g h)
let tgt (x : *) (y : *) (f : x -> y) (z : *) (g : y -> z) (w : *) (h : z -> w) = comp (comp f g) h

coh assoc (x : *) (y : *) (f : x -> y) (z : *) (g : y -> z) (w : *) (h : z -> w): src f g h ->  tgt f g h

let srcnat (x : *) (y : *) (f : x -> y) (z : *) (g : y -> z) (h : y -> z) (m : g -> h) (w : *) (k : z -> w) = comp (assoc f g k) (tgt f [m] k)
let tgtnat (x : *) (y : *) (f : x -> y) (z : *) (g : y -> z) (h : y -> z) (m : g -> h) (w : *) (k : z -> w) = comp (src f [m] k) (assoc f h k)

coh natassoc (x : *) (y : *) (f : x -> y) (z : *) (g : y -> z) (h : y -> z) (m : g -> h) (w : *) (k : z -> w) : srcnat f m k -> tgtnat f m k

coh natnatassoc (x : *) (y : *) (f : x -> y) (z : *) (g : y -> z) (h : y -> z) (m : g -> h) (n : g -> h) (a : m -> n) (w : *) (k : z -> w) : comp (natassoc f m k) (tgtnat f [a] k) -> comp (srcnat f [a] k) (natassoc f n k)
